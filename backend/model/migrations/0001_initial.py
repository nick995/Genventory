# Generated by Django 4.2.7 on 2024-04-07 00:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

def load_initial_data(apps, schema_editor):
    chromesome_list = ["I", "II", "III", "IV", "V", "X", "None"]
    allele_model = apps.get_model('model', 'Allele')
    for chromesome in chromesome_list:        
        allele_model.objects.create(
            name = f"+ {chromesome}",
            chrome = chromesome,
            gene_type = f"+ {chromesome}",
            gene_type_without_chrome = "+",
        )
    allele_model.objects.create(
        name = "/",
        gene_type = "/",
        gene_type_without_chrome = "/",
    )

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allele',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('chrome', models.CharField(blank=True, max_length=255)),
                ('phenotype', models.CharField(blank=True, max_length=255)),
                ('source', models.CharField(blank=True, max_length=255)),
                ('isolation_name', models.CharField(blank=True, max_length=255)),
                ('gene', models.CharField(blank=True, max_length=255)),
                ('mutagen', models.CharField(blank=True, max_length=255)),
                ('qualifiers', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('gene_type', models.CharField(blank=True, max_length=256, null=True, unique=True)),
                ('gene_type_without_chrome', models.CharField(blank=True, max_length=256, null=True)),
                ('constructed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreezeTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain', models.CharField(max_length=100)),
                ('requestor', models.CharField(blank=True, max_length=100)),
                ('request_date', models.DateField(blank=True, null=True)),
                ('submission_status', models.CharField(blank=True, max_length=20)),
                ('freezing_status', models.CharField(blank=True, max_length=20)),
                ('test_thaws_status', models.CharField(blank=True, max_length=20)),
                ('thaw_check_status', models.CharField(blank=True, max_length=20)),
                ('filed_in', models.CharField(blank=True, max_length=100)),
                ('comments', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plasmid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=256)),
                ('dna_type', models.CharField(blank=True, max_length=256)),
                ('create_at', models.DateField()),
                ('constructed_by', models.CharField(blank=True, max_length=256)),
                ('MTA', models.CharField(blank=True, max_length=256)),
                ('drug_resistance', models.CharField(blank=True, max_length=255)),
                ('vector', models.CharField(blank=True, max_length=255)),
                ('reference', models.CharField(blank=True, max_length=255)),
                ('short_description', models.TextField(blank=True)),
                ('summary_of_construction', models.TextField(blank=True)),
                ('sequence', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Strain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('position', models.CharField(max_length=255)),
                ('date_entered', models.DateField(blank=True, null=True)),
                ('isolation_number', models.CharField(blank=True, max_length=255, null=True)),
                ('lost_person', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ordered_geno_type', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ThawTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField(blank=True, null=True)),
                ('strain', models.CharField(max_length=100)),
                ('requestor', models.CharField(blank=True, max_length=255)),
                ('comments', models.TextField(blank=True)),
                ('thaw_done', models.CharField(blank=True, max_length=20)),
                ('refreeze', models.CharField(blank=True, max_length=20)),
                ('current_location', models.JSONField(blank=True, default=list)),
            ],
        ),
        migrations.CreateModel(
            name='StrainAllele',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allele', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.allele')),
                ('strain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.strain')),
            ],
        ),
        migrations.AddField(
            model_name='strain',
            name='alleles',
            field=models.ManyToManyField(through='model.StrainAllele', to='model.allele'),
        ),
        migrations.RunPython(load_initial_data),

    ]
